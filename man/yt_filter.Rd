% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yt_filter.R
\name{yt_filter}
\alias{yt_filter}
\title{Filter subtitles and link back the original source}
\usage{
yt_filter(
  subtitles_df,
  pattern,
  ignore_case = TRUE,
  regex = TRUE,
  playlist = NULL,
  sub_lang = NULL,
  sub_format = "vtt",
  lag = -3,
  yt_base_folder = NULL
)
}
\arguments{
\item{subtitles_df}{Defaults to NULL. If given must be a data frame,
typically generated with \code{yt_get_local_subtitles() |> yt_read_vtt()}.}

\item{pattern}{A character string.}

\item{ignore_case}{Defaults to TRUE.}

\item{regex}{Defaults to TRUE.}

\item{playlist}{Playlist, either as full url from Youtube or as id.}

\item{sub_lang}{Defaults to NULL. If not given, all local subtitles are
returned. If given, only subtitles in the given sub_lang are returned.}

\item{sub_format}{Defaults to "vtt". File extension of the subtitle.}

\item{lag}{Defaults to \code{-3}. Refers to the number of seconds before or after
the start time as recorded in the subtitles. Minus three or four seems to
generally be a good fit.}

\item{yt_base_folder}{Base folder, defaults to NULL. Can be set with
\code{\link[=yt_set_base_folder]{yt_set_base_folder()}}}
}
\value{
A data frame, including only lines where the given pattern is found.
}
\description{
Filter subtitles and link back the original source
}
\examples{
\dontrun{
yt_get_subtitles_playlist(
  playlist = "https://www.youtube.com/playlist?list=PLbyvawxScNbuSi7sJaJbHNyyx3iYJeW3P"
)

subtitles_df <- yt_get_local_subtitles(
  playlist = "https://www.youtube.com/playlist?list=PLbyvawxScNbuSi7sJaJbHNyyx3iYJeW3P"
) |>
  yt_read_vtt()

yt_filter(
  pattern = "rover",
  subtitles_df = subtitles_df
)
}

}
